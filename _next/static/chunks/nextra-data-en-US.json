{"/for_konsumenter":{"title":"For konsumenter","data":{"oppsett#Oppsett":"For å ta i bruk dp-iverksett må klient-applikasjonen åpne for trafikk til tjenesten. Legg inn følgende kodesnutt i deres\nnais-konfig:\naccessPolicy:\n  outbound:\n    rules:\n      - application: dp-iverksett\n        namespace: teamdagpenger\nTilsvarende må vi åpne for trafikk fra deres klient-applikasjon i dp-iverksett. Opprett en pull request i dp-iverksett med følgende kodesnutt i nais-konfig:\naccessPolicy:\n  inbound:\n    rules:\n      - application: [applikasjonsnavn]\n        namespace: [namespace]\nMerk at disse reglene legger opp til service-til-service-kommunikasjon innenfor samme kubernetes-cluster. Det vil si at\nklient-applikasjonen må bruke dp-iverksett sin service discovery-url. Bruk en av følgende URL-er:\nhttp://dp-iverksett.teamdagpenger\nhttp://dp-iverksett.teamdagpenger.svc.cluster.local\nTa kontakt med oss dersom deres klient-applikasjon må bruke ingressen for å kommunisere med dp-iverksett.","autentisering#Autentisering":"Tjenesten krever Azure token på alle kall, dvs. enten et Client Credentials-token eller et On-Behalf-Of-token.\nLes mer om autentisering i nais-dokumentasjonen.","api-dokumentasjon-og-kontrakter-for-dto-klasser#API-dokumentasjon og kontrakter for DTO-klasser":"dp-iverksett har swagger-dokumentasjon her.Vi har samlet alle DTO-ene som brukes av API-et i et bibliotek. Se dp-kontrakter på github\nog bruk pakken iverksett."}},"/for_konsumenter/avstemming":{"title":"Avstemming","data":{"":"Utbetalingstjenesten håndterer grensesnittavstemming mot Økonomisystemet internt. Konsumenter trenger ikke å foreta seg noe for at grensesnittavstemming skal\nsettes i gang og gå jevnlig.Ta kontakt med oss dersom dere har behov for annen type avstemming mot Økonomisystemet eller mellom vedtaksløsningen og utbetalingsløsningen."}},"/for_konsumenter/iverksetting":{"title":"Iverksetting","data":{"post-apiiverksetting#POST /api/iverksetting":"Sender en utbetaling til NAVs økonomisystem. Når API-et mottar en utbetaling som skal iverksettes, gjør den noen enkle valideringer\nog svarer med en 202 Accepted dersom valideringene går gjennom. Resten av løypa for å utbetale er helt asynkron og orkestreres\ninternt i dp-iverksett. En ok-respons fra API-et betyr altså ikke at utbetalingen er kvittert ok i økonomisystemet, men at\ndp-iverksett tar ansvaret for videre håndtering. Bruk status-endepunktet for å sjekke status på utbetalingen.Følgende må være oppfylt for at dp-iverksett skal akseptere utbetalingen:Format på utbetaling\nUtbetalingsperiodene må ikke overlappe i tid\nUtbetalingsperiodene må være gyldige perioder, dvs. at fom-dato på en periode må være før tom-dato.\nAlle beløp må være positive heltall. Dvs. alle beløp må være hele kroner, og tjenesten aksepterer ikke 0-utbetalinger eller negative utbetalinger\nAlle beløp må være under maksgrensen på 5000 kr/dag\nTilstand\ndp-iverksett kan ikke allerede ha en utbetaling med samme behandlingsid\nEvt. tidligere utbetaling må tilhøre samme sak og person\nEvt. tidligere utbetaling på saken må være ferdig iverksatt\nVidere er det noen ytelsesspesifikke valideringer. Ta kontakt med oss dersom din ytelse har spesielle behov.","utbetalinger#Utbetalinger":"Listen av utbetalinger som dp-iverksett tar i mot følger dette formatet:\n{\n \"beløpPerDag\": \"int\",\n \"fraOgMed\": \"date\",\n \"tilOgMed\": \"date\",\n \"stønadsdata\": {\n    \"stønadstype\": \"enum\",\n    <ekstra felter spesifikke for ytelsen>\n }\n}\nUtbetalingene må altså periodiseres og klienten må fastsette et beløp per dag for perioden. Dersom beløpet eller stønadstypen\nendrer seg eller brukeren har dager i perioden uten utbetaling (eksempelvis helg), må det opprettes ny periode.Eksempler\nEksempel 1: Endring i beløp\nBruker skal ha utbetaling mandag-fredag med 500kr/dag tom onsdag og 400kr/dag fom torsdag. Det representeres med følgende utbetalingsperioder:\n[\n  {\n    \"beløpPerDag\": 500,\n    \"fraOgMed\": \"2023-11-13\",\n    \"tilOgMed\": \"2023-11-15\"\n  },\n  {\n    \"beløpPerDag\": 400,\n    \"fraOgMed\": \"2023-11-16\",\n    \"tilOgMed\": \"2023-11-17\"\n  }\n]\nEksempel 2: Utbetaling med samme beløp for en 14-dagers periode\nBruker skal ha 500kr/dag for 14 dager, med unntak av helger. Det representeres med følgende utbetalingsperioder:\n[\n  {\n    \"beløpPerDag\": 500,\n    \"fraOgMed\": \"2023-11-13\",\n    \"tilOgMed\": \"2023-11-17\"\n  },\n  {\n    \"beløpPerDag\": 500,\n    \"fraOgMed\": \"2023-11-20\",\n    \"tilOgMed\": \"2023-11-24\"\n  }\n]\nMerk at dp-iverksett må ha beløp per dag for meldepliktsytelser uavhengig av hvordan vedtaksløsningen representerer utbetalingene\ninternt. Dette kommer av føringer fra NAVs økonomisystem. Dersom din vedtaksløsning feks. representerer utbetalingen som et\ntotalbeløp for en 14-dagers periode, må dere på konsumentsiden fordele dette totalbeløpet på dagsbeløp slik dere ser det hensiktsmessig.","gjeldende-totalbilde-av-utbetalinger-på-saken#Gjeldende totalbilde av utbetalinger på saken":"Listen av utbetalinger som dp-iverksett tar i mot skal være det gjeldende totalbildet av utbetalinger for hele saken. dp-iverksett håndterer utbetalingene\npå samme måte uavhengig av om vedtaket som iverksettes er en førstegangsutbetaling eller en korrigering: Når dp-iverksett beregner hva som skal sendes\ntil utbetalingssystemet, regner den ut forskjellen på totalbildet for det nye vedtaket og totalbildet for det evt. forrige vedtaket som ble iverksatt.Konseptet er illustrert i figuren under for 3 meldekort, der ett meldekort korrigeres:\n(Åpne bildet i ny fane for bedre oppløsning - må prøve å fikse dette)\nI denne figuren er D en dag med utbetaling og H er en helgedag uten utbetaling. Rosa farge indikerer en dag med korrigert utbetaling.Under er et eksempel på hvordan dataen for dette totalbildet kan se ut for 7 meldekort som sendes inn og korrigeres:\n(Åpne bildet i ny fane for bedre oppløsning - må prøve å fikse dette)I det første meldekortet som sendes inn (B-2) er det gjeldende totalbildet utbetaling for uke 1 og 2. For det neste meldekortet som sendes inn (B-3)\ner det gjeldende totalbildet utbetaling for uke 1 og 2 og uke 3 og 4. Dersom vedtaksløsningen vil iverksette en korrigering av utbetalingen for uke 1 og 2 (B-4),\nsender den inn den nye sannheten for uke 1 og 2 og uendret utbetaling for uke 3 og 4. Her er det tre ting å merke seg:\nVed en korrigering skal dp-iverksett alltid ha ny gjeldende sannhet, ikke differansen mellom ny og forrige utbetaling.\ndp-iverksett vil ikke agere på noe dersom totalbildet er uendret. Hvis totalbildet for deler av utbetalingen er uendret, som uke 3 og 4 over,\nvil det ikke skje noe med denne perioden. Hvis totalbildet for hele saken er uendret, vil ikke dp-iverksett sende noe til utbetalingssystemet.\nDersom det har vært utbetaling på saken tidligere, må dp-iverksett ha behandlingsid for den forrige behandlingen som ble iverksatt. Behandlingsid-en brukes til å hente ut\ndet forrige totalbildet av utbetalinger på saken, slik at dp-iverksett kan utlede om den nye behandlingen er utbetaling for en ny periode eller om det er en korrigering\n(og i så fall hva som skal korrigeres).\nMerk også at korrigeringen av utbetalingen for uke 5-6 (B-6) er et opphør. Ved opphør av utbetaling forventer dp-iverksett at det ikke finnes noen utbetalinger\nfor perioden opphøret gjelder for. I dette eksempelet er altså alle utbetalingene for uke 5-6 fjernet fra listen. Dersom man vil iverksette et opphør av alle utbetalinger på saken,\nkan man sende en tom liste av utbetalinger til dp-iverksett.","periodisering-av-utbetalinger#Periodisering av utbetalinger":"Utbetalingsperiodene som sendes til utbetalingstjenesten vil bli sendt videre til Økonomisystemet med samme periodisering som utbetalingstjenesten mottar. Økonomisystemet/PO Utbetaling\nhar et ønske om å minimere antall identiske utbetalingsperioder som sendes. Dette illustreres best ved et eksempel. Dersom man vil iverksette en utbetaling for mandag-fredag med likt dagsbeløp og stønadstype,\ner det bedre å sende dette som én periode:\n[\n  {\n    \"beløpPerDag\": 500,\n    \"fraOgMed\": \"2024-02-12\",\n    \"tilOgMed\": \"2024-02-16\",\n    \"stønadsdata\": {\n      \"stønadstype\": \"DAGPENGER_ARBEIDSSØKER_ORDINÆR\"\n    }\n  }\n]\nHeller enn å sende 5 identiske perioder:\n[\n  {\n    \"beløpPerDag\": 500,\n    \"fraOgMed\": \"2024-02-12\",\n    \"tilOgMed\": \"2024-02-12\",\n    \"stønadsdata\": {\n      \"stønadstype\": \"DAGPENGER_ARBEIDSSØKER_ORDINÆR\"\n    }\n  },\n  {\n    \"beløpPerDag\": 500,\n    \"fraOgMed\": \"2024-02-13\",\n    \"tilOgMed\": \"2024-02-13\",\n    \"stønadsdata\": {\n      \"stønadstype\": \"DAGPENGER_ARBEIDSSØKER_ORDINÆR\"\n    }\n  },\n  {\n    \"beløpPerDag\": 500,\n    \"fraOgMed\": \"2024-02-14\",\n    \"tilOgMed\": \"2024-02-14\",\n    \"stønadsdata\": {\n      \"stønadstype\": \"DAGPENGER_ARBEIDSSØKER_ORDINÆR\"\n    }\n  },\n  {\n    \"beløpPerDag\": 500,\n    \"fraOgMed\": \"2024-02-15\",\n    \"tilOgMed\": \"2024-02-15\",\n    \"stønadsdata\": {\n      \"stønadstype\": \"DAGPENGER_ARBEIDSSØKER_ORDINÆR\"\n    }\n  },\n  {\n    \"beløpPerDag\": 500,\n    \"fraOgMed\": \"2024-02-16\",\n    \"tilOgMed\": \"2024-02-16\",\n    \"stønadsdata\": {\n      \"stønadstype\": \"DAGPENGER_ARBEIDSSØKER_ORDINÆR\"\n    }\n  }\n]\nUtbetalingsperioder som sendes på tvers av behandlinger må imidlertid deles opp selv om de er like og ligger back-to-back i tid. Eksempelvis:Dersom man i behandling #1 iverksetter følgende utbetalingsperiode:\n[\n  {\n    \"beløpPerDag\": 500,\n    \"fraOgMed\": \"2024-02-12\",\n    \"tilOgMed\": \"2024-02-16\",\n    \"stønadsdata\": {\n      \"stønadstype\": \"DAGPENGER_ARBEIDSSØKER_ORDINÆR\"\n    }\n  }\n]\nOg man i behandling #2 vil iverksette flere dager med utbetaling, må dette deles i to:\n[\n  {\n    \"beløpPerDag\": 500,\n    \"fraOgMed\": \"2024-02-12\",\n    \"tilOgMed\": \"2024-02-16\",\n    \"stønadsdata\": {\n      \"stønadstype\": \"DAGPENGER_ARBEIDSSØKER_ORDINÆR\"\n    }\n  },\n  {\n    \"beløpPerDag\": 500,\n    \"fraOgMed\": \"2024-02-17\",\n    \"tilOgMed\": \"2024-02-23\",\n    \"stønadsdata\": {\n      \"stønadstype\": \"DAGPENGER_ARBEIDSSØKER_ORDINÆR\"\n    }\n  }\n]\nDersom disse utbetalingene hadde blitt slått sammen til én periode, vil vi ikke klare å utlede hva som er differansen fra totalbildet i forrige utbetaling.","tilgangskontroll-og-validering-av-vedtak#Tilgangskontroll og validering av vedtak":"Funksjonaliteten som tilbys i dp-iverksett er direkte koblet til penger som betales ut fra NAV til sluttbruker. Det kan ha store konsekvenser\ndersom vi betaler ut for mye penger eller penger til feil person. Derfor er vi nødt til å ha streng tilgangskontroll på vedtakene som dp-iverksett\ntar i mot.Meldepliktsytelsene har gjerne en todelt flyt der det først fattes et vedtak om rett til ytelsen, og så danner meldekortene brukeren sender inn\ngrunnlaget for hva som skal utbetales i en gitt periode. Meldekortene behandles stort sett fullautomatisk av vedtaksløsningen, mens vedtaket om\nrett kan behandles helt eller delvis manuelt.Dp-iverksett krever at konsumentene sender både vedtaket om rett og vedtakene for utbetaling som følger av meldekortene med riktig kontekst. Tjenesten vil validere\nat vedtak med saksbehandler-kontekst kommer fra en ansatt med beslutter-rolle for ytelsen. Videre har dp-iverksett oversikt over hvilken klient-applikasjon som\nhar tilgang til å gjøre kall med ren system-kontekst for hver ytelse.Dersom dp-iverksett mottar en utbetaling som ikke kan spores tilbake til et vedtak om rett til ytelsen eller mottar en utbetaling fra en applikasjon\nsom ikke har tilgang til å gjøre kall med system-kontekst, vil utbetalingen avvises.For vedtaket om rett til ytelsen trenger dp-iverksett å vite saksid, behandlingsid og sluttbrukeren vedtaket gjelder. Disse vedtakene kan sendes\ntil det samme endepunktet som utbetalingene sendes til. I kontraktene finnes det en default-verdi for vedtaksdetaljer for slike vedtak. Informasjonen\ndp-iverksett krever er eksemplifisert under:\n{\n  \"sakId\": \"ec45be1c-1f2d-451e-bea3-e5a240586287\",\n  \"behandlingId\": \"f28417ba-78bb-440b-985c-fc1f0330c1c2\",\n  \"personIdent\": \"<fnr>\",\n  \"vedtak\": {\n    \"vedtakstidspunkt\": \"2023-06-19T15:24:14\",\n    \"saksbehandlerId\": \"S123456\",\n    \"beslutterId\": \"B123456\",\n    \"utbetalinger\": []\n  }\n}\nMerk at vi ikke gjør noen validering på feltene saksbehandlerId og beslutterId. Vi sjekker ikke at de er gyldige NAV-identer, og vi sjekker ikke at OBO-tokenet på kallet hører til samme ident\nsom identen i beslutterId-feltet."}},"/for_konsumenter/status":{"title":"Status på utbetaling","data":{"":"Status på utbetalinger er en av følgende verdier:\nStatus\tBeskrivelse\tIKKE_PÅBEGYNT\tIkke sendt til økonomisystemet\tSENDT_TIL_OPPDRAG\tSendt til økonomisystemet, venter på svar\tFEILET_MOT_OPPDRAG\tFeilkvittering fra økonomisystemet. Kan være enten teknisk eller funksjonell feil.\tOK\tKvittert OK fra økonomisystemet og ferdigstilt.\tOK_UTEN_UTBETALING\tFerdigstilt uten å ha blitt sendt til økonomisystemet pga. at det ikke er noe å utbetale","med-rest#Med REST":"","get-behandlingidstatus#GET /{behandlingId}/status":"Henter status på utbetaling. Dette endepunktet kan brukes for å sjekke tilstanden til en utbetaling som er tatt i mot og\nvalidert av dp-iverksett. NAVs økonomisystem har en asynkron integrasjon og er i tillegg et stormaskinsystem som har definerte\noppetider. Økonomisystemet er vanligvis stengt i helger, helligdager og mellom kl 21 og kl 6 på virkedager. Derfor kan det\nta lang tid før en utbetaling blir kvittert ut fra økonomisystemet avhengig av når den er sendt inn.Dersom dp-iverksett finner behandlingen, vil endepunktet svare med 200 OK og utbetalingsstatus.","med-kafka#Med Kafka":"Vi har satt opp en topic hvor vi tilbyr statusendringer på utbetalinger: teamdagpenger.iverksetting-status-v1. Om dette\ner interessant for dere kan dere kontakte oss så vi får gitt appen deres tilgang til topicen. I tillegg må følgende finnes\ni nais-konfigen deres:\nspec:\n  kafka:\n    pool: nav-prod # Eller nav-dev for dev-miljø\nMeldinger som publiseres her bruker personident som nøkkel og har følgende format på meldingen:\ndata class StatusEndretMelding(\n    val sakId: String,\n    val behandlingId: String,\n    val iverksettingId: String?,\n    val fagsystem: Fagsystem,\n    val status: IverksettStatus,\n)\nDataklassen finner du i dp-kontrakter om du ønsker å bruke den direkte."}},"/":{"title":"Om tjenesten","data":{"":"NB! Denne dokumentasjonssiden er under aktiv utvikling. Beklager for evt. skrivefeil, uklarheter, lange tekster og mangel på tekst 😊 Vi tar gjerne i mot tilbakemeldinger – innspill og ønsker kan sendes på slack.","dp-iverksett#DP-Iverksett":"Dp-iverksett tilbyr tjenester innenfor utbetalingsdomenet for arbeidsytelser. Mer spesifikt kan den sende og korrigere utbetalinger, avstemme utbetalinger og gi oppdatert status på tilstanden til en utbetaling.\nSe individuelle sider for dokumentasjon av hver tjeneste.Hensikten med denne siden er å dokumentere konsepter og funksjonelle aspekter ved dp-iverksett sine tjenester som ikke kommer tydelig frem i API-dokumentasjonen. Er du ute etter tekniske detaljer rundt endepunktene, se Swagger-dokumentasjonen\nher. Videre finnes det kontrakter for alle DTO-er som dp-iverksett bruker i sitt API her.\nDe aktuelle kontraktene for iverksetting ligger i artifaktet iverksett. Vi oppfordrer alle konsumenter til å ta i bruk kontraktene.","intern-arkitektur#Intern arkitektur":""}},"/utvikling":{"title":"Utvikling","data":{}}}